<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="T:WebApi.Models.ProductModel">
            <summary>
                Product Details.
            </summary>
        </member>
        <member name="M:WebApi.Models.ProductModel.#ctor(Domain.Product)">
            <summary>
                Product Details constructor.
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Id">
            <summary>
                Gets product ID.
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Supplier">
            <summary>
            Supplier
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Name">
            <summary>
            Supplier
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Rate">
            <summary>
            Rate
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.DailyStandingCharge">
            <summary>
            Daily Standing Charge
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.ContractLength">
            <summary>
            Contract Length
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Renewable">
            <summary>
            Renewable
            </summary>
        </member>
        <member name="P:WebApi.Models.ProductModel.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.CustomApiConventions">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Create(System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Delete(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Edit(System.Object,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Find(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Get(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.List(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Post(System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Patch(System.Int32,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomApiConventions.Update(System.Int32,System.Object)">
            <summary>
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.CustomControllersExtensions">
            <summary>
                Custom Controller Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomControllersExtensions.AddCustomControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add Custom Controller dependencies.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.CustomCorsExtensions">
            <summary>
                CORS Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomCorsExtensions.AddCustomCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add CORS.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.CustomCorsExtensions.UseCustomCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Use CORS.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.DataProtectionExtensions">
            <summary>
                Data Protection Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.DataProtectionExtensions.AddCustomDataProtection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add Data Protection.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.ExceptionFilter">
            <summary>
                Exception Filter.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.ExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
                Add Problem Details when occurs Domain Exception.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.FeatureFlags.CustomControllerFeatureProvider">
            <summary>
                Custom Controller Feature Provider.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.FeatureFlags.CustomControllerFeatureProvider.#ctor(Microsoft.FeatureManagement.IFeatureManager)">
            <summary>
                Custom Controller Feature Provider constructor.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.FeatureFlags.CustomControllerFeatureProvider.PopulateFeature(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart},Microsoft.AspNetCore.Mvc.Controllers.ControllerFeature)">
            <summary>
                Populate Features.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.FeatureFlags.CustomFeature">
            <summary>
                Features Flags Enum.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.CreateProduct">
            <summary>
            Product
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.GetProduct">
            <summary>
                Get Product.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.GetProducts">
            <summary>
                Get Products.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.ErrorFilter">
            <summary>
                Filter errors out.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.Swagger">
            <summary>
                Use Swagger.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.SQLServer">
            <summary>
                Use SQL Server Persistence.
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.EditProduct">
            <summary>
                Edit Product
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.DeleteProduct">
            <summary>
                Delete Product
            </summary>
        </member>
        <member name="F:WebApi.Modules.Common.FeatureFlags.CustomFeature.GetAllProducts">
            <summary>
            Get All Products
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.FeatureFlags.FeatureFlagsExtensions">
            <summary>
                Feature Flags Extension.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.FeatureFlags.FeatureFlagsExtensions.AddFeatureFlags(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Add Feature Flags dependencies.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.HttpMetricsExtensions">
            <summary>
                Http Metrics Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.HttpMetricsExtensions.UseCustomHttpMetrics(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Add Prometheus dependencies.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.LoggingExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.LoggingExtensions.AddInvalidRequestLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:WebApi.Modules.Common.ReverseProxyExtensions">
            <summary>
                Reverse Proxy Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.ReverseProxyExtensions.AddProxy(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add Proxy.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.ReverseProxyExtensions.UseProxy(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Use Proxy.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.Swagger.ConfigureSwaggerOptions">
            <summary>
                Configures the Swagger generation options.
            </summary>
            <remarks>
                This allows API versioning to define a Swagger document per API version after the
                <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider" /> service has been resolved from the service container.
            </remarks>
        </member>
        <member name="M:WebApi.Modules.Common.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:WebApi.Modules.Common.Swagger.ConfigureSwaggerOptions" /> class.
            </summary>
            <param name="provider">
                The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger
                documents.
            </param>
        </member>
        <member name="M:WebApi.Modules.Common.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="T:WebApi.Modules.Common.Swagger.SwaggerExtensions">
            <summary>
                Swagger Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.Swagger.SwaggerExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Add Swagger Configuration dependencies.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.Swagger.SwaggerExtensions.UseVersionedSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
                Add Swagger dependencies.
            </summary>
        </member>
        <member name="T:WebApi.Modules.Common.VersioningExtensions">
            <summary>
                Versioning Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.Common.VersioningExtensions.AddVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Method that adds versioning to the api.
            </summary>
        </member>
        <member name="T:WebApi.Modules.HealthChecksExtensions">
            <summary>
                HealthChecks Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.HealthChecksExtensions.AddHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Add Health Checks dependencies varying on configuration.
            </summary>
        </member>
        <member name="M:WebApi.Modules.HealthChecksExtensions.UseHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                Use Health Checks dependencies.
            </summary>
        </member>
        <member name="T:WebApi.Modules.SQLServerExtensions">
            <summary>
                Persistence Extensions.
            </summary>
        </member>
        <member name="M:WebApi.Modules.SQLServerExtensions.AddSQLServer(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Add Persistence dependencies varying on configuration.
            </summary>
        </member>
        <member name="T:WebApi.Modules.UseCasesExtensions">
            <summary>
                Adds Use Cases classes.
            </summary>
        </member>
        <member name="M:WebApi.Modules.UseCasesExtensions.AddUseCases(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds Use Cases to the ServiceCollection.
            </summary>
            <param name="services">Service Collection.</param>
            <returns>The modified instance.</returns>
        </member>
        <member name="T:WebApi.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebApi.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:WebApi.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:WebApi.Startup">
            <summary>
                Startup.
            </summary>
        </member>
        <member name="M:WebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Startup constructor.
            </summary>
        </member>
        <member name="M:WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configure dependencies from application.
            </summary>
        </member>
        <member name="M:WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
                Configure http request pipeline.
            </summary>
        </member>
        <member name="T:WebApi.UseCases.CustomErrors.V1.CustomErrorController">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WebApi.UseCases.CustomErrors.V1.CustomErrorController.CustomError">
            <summary>
                Get an custom error.
            </summary>
            <returns>The custom error model.</returns>
        </member>
        <member name="T:WebApi.UseCases.CustomErrors.V1.CustomErrorResponse">
            <summary>
                Custom Error Response
            </summary>
        </member>
        <member name="P:WebApi.UseCases.CustomErrors.V1.CustomErrorResponse.RequestId">
            <summary>
                Gets Request Id.
            </summary>
        </member>
        <member name="P:WebApi.UseCases.CustomErrors.V1.CustomErrorResponse.ShowRequestId">
            <summary>
                Verify if RequestId is null or empty.
            </summary>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.CreateProduct.CreateProductResponse">
            <summary>
            Response for Create 
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.CreateProduct.CreateProductResponse.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.CreateProduct.CreateProductResponse.#ctor(WebApi.Models.ProductModel)">
            <summary>
            Response for Create Constuctor
            </summary>
            <param name="productModel"></param>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.CreateProduct.ProductsController">
            <summary>
            Products
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.CreateProduct.ProductsController.#ctor(Application.Services.Validation)">
            <summary>
            Constructor
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.CreateProduct.ProductsController.Post(Application.UseCases.CreateProduct.ICreateProductUseCase,System.String,System.String,System.String,System.Single,System.Int32,System.Single,System.Int32)">
            <summary>
                Create an product.
            </summary>
            <response code="200">Product already exists,</response>
            <response code="201">The product was created successfully.</response>
            <response code="400">Bad request.</response>
            <param name="useCase"></param>
            <param name="name"></param>
            <param name="status"></param>
            <param name="supplier"></param>
            <param name="rate"></param>
            <param name="contractLength"></param>
            <param name="dailyStandingCharge"></param>
            <param name="renewable"></param>
            <returns>The newly created product.</returns>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.DeleteProduct.DeleteProductResponse">
            <summary>
            Delete Product Response
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.DeleteProduct.DeleteProductResponse.#ctor(Domain.Product)">
            <summary>
                Delete Product Response constructor.
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.DeleteProduct.DeleteProductResponse.Id">
            <summary>
                Gets product ID.
            </summary>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.DeleteProduct.ProductsController">
            <summary>
            Products 
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.DeleteProduct.ProductsController.#ctor(Application.UseCases.DeleteProduct.IDeleteProductUseCase,Application.Services.Validation)">
            <summary>
            Constructor
            </summary>
            <param name="useCase"></param>
            <param name="validation"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.DeleteProduct.ProductsController.Delete(System.Int32)">
            <summary>
                Delete an Product.
            </summary>
            <response code="200">The closed product id.</response>
            <response code="400">Bad request.</response>
            <response code="404">Not Found.</response>
            <param name="id">The Id.</param>
            <returns>ViewModel.</returns>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.EditProduct.EditProductResponse">
            <summary>
            Response for Edit 
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.EditProduct.EditProductResponse.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.EditProduct.EditProductResponse.#ctor(WebApi.Models.ProductModel)">
            <summary>
            Response for Edit Constuctor
            </summary>
            <param name="productModel"></param>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.EditProduct.ProductsController">
            <summary>
            Products
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.EditProduct.ProductsController.#ctor(Application.Services.Validation)">
            <summary>
            Constructor
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.EditProduct.ProductsController.Patch(System.Int32,Application.UseCases.EditProduct.IEditProductUseCase,System.String,System.String,System.String,System.Single,System.Int32,System.Single,System.Int32)">
            <summary>
                Edit an product.
            </summary>
            <response code="200">Product already exists,</response>
            <response code="201">The product was created successfully.</response>
            <response code="400">Bad request.</response>
            <param name="id"></param>
            <param name="useCase"></param>
            <param name="name"></param>
            <param name="status"></param>
            <param name="supplier"></param>
            <param name="rate"></param>
            <param name="contractLength"></param>
            <param name="dailyStandingCharge"></param>
            <param name="renewable"></param>
            <returns>The newly created product.</returns>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetAllProducts.GetAllProductsResponse">
            <summary>
                Get Products Response.
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetAllProducts.GetAllProductsResponse.#ctor(System.Collections.Generic.IEnumerable{Domain.Product})">
            <summary>
                The Get Products Response constructor.
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.GetAllProducts.GetAllProductsResponse.Products">
            <summary>
                Products
            </summary>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetAllProducts.ProductsController">
            <summary>
            Products
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetAllProducts.ProductsController.#ctor(Application.Services.Validation,Application.UseCases.GetAllProducts.IGetAllProductUseCase)">
            <summary>
            Constructor
            </summary>
            <param name="validation"></param>
            <param name="useCase"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetAllProducts.ProductsController.Get">
            <summary>
                Get Products.
            </summary>
            <response code="200">The List of Products.</response>
            <response code="404">Not Found.</response>
            <returns>An asynchronous <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" />.</returns>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetProducts.GetProductsResponse">
            <summary>
                Get Products Response.
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProducts.GetProductsResponse.#ctor(System.Collections.Generic.IEnumerable{Domain.IProduct})">
            <summary>
                The Get Products Response constructor.
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.GetProducts.GetProductsResponse.Products">
            <summary>
                Products
            </summary>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetProducts.ProductsController">
            <summary>
            Products
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProducts.ProductsController.#ctor(Application.Services.Validation,Application.UseCases.GetProducts.IGetProductsUseCase)">
            <summary>
            Constructor
            </summary>
            <param name="validation"></param>
            <param name="useCase"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProducts.ProductsController.Get(Domain.ProductSearch)">
            <summary>
                Get Products.
            </summary>
            <response code="200">The List of Products.</response>
            <response code="404">Not Found.</response>
            <returns>An asynchronous <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" />.</returns>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetProduct.GetProductResponse">
            <summary>
                Get Product Response.
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProduct.GetProductResponse.#ctor(Domain.Product)">
            <summary>
                The Get Product Response constructor.
            </summary>
        </member>
        <member name="P:WebApi.UseCases.Products.V1.GetProduct.GetProductResponse.Product">
            <summary>
                Gets product ID.
            </summary>
        </member>
        <member name="T:WebApi.UseCases.Products.V1.GetProduct.ProductsController">
            <summary>
            Products
            </summary>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProduct.ProductsController.#ctor(Application.Services.Validation)">
            <summary>
            Constructor
            </summary>
            <param name="validation"></param>
        </member>
        <member name="M:WebApi.UseCases.Products.V1.GetProduct.ProductsController.Get(Application.UseCases.GetProduct.IGetProductUseCase,System.Int32)">
            <summary>
                Get an product details.
            </summary>
            <response code="200">The Product.</response>
            <response code="404">Not Found.</response>
            <param name="useCase">Use case.</param>
            <param name="id"></param>
            <returns>An asynchronous <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" />.</returns>
        </member>
    </members>
</doc>
